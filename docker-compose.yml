services:
  app:
    image: ghcr.io/morhuhan/ozvestnik:latest
    container_name: next-app
    restart: unless-stopped
    networks: [ web ]
    expose: ["3000"]
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - /root/apps/ozvestnik/.env
    command: >
      sh -lc '
        set -e
        echo "[app] Node: $(node -v)";
        PRISMA_CLI="node /app/node_modules/prisma/build/index.js";
        if node -e "require.resolve(\"prisma\")" >/dev/null 2>&1; then
          if [ -d "/app/prisma/migrations" ] && [ "$(ls -A /app/prisma/migrations 2>/dev/null)" ]; then
            echo "[app] Migrations found -> migrate deploy";
            $$PRISMA_CLI migrate deploy;
          else
            echo "[app] No migrations -> db push";
            $$PRISMA_CLI db push;
          fi
        else
          echo "[app] Prisma package not found; skipping";
        fi
        echo "[app] Starting server...";
        exec node server.js
      '

  caddy:
    image: caddy:2
    container_name: caddy
    restart: unless-stopped
    networks: [ web ]
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - app

  db:
    image: postgres:16
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ozersk_user
      POSTGRES_PASSWORD: 2121212q
      POSTGRES_DB: ozersk
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ozersk_user -d ozersk"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks: [ web ]

networks:
  web: {}

volumes:
  caddy_data: {}
  caddy_config: {}
  db_data: {}
