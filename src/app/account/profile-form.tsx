"use client";

import { useRef, useState, useTransition } from "react";
import { useRouter } from "next/navigation";
import { useToast } from "../components/toast/ToastProvider";
import { saveProfile } from "./profile.actions";

type SaveResult = { ok: true } | { ok: false; error: string };

export default function ProfileForm({
  initial,
}: {
  initial: { name: string; image: string; bio: string };
}) {
  const [name, setName] = useState(initial.name);
  const [bio, setBio] = useState(initial.bio);
  const [previewUrl, setPreviewUrl] = useState<string | null>(initial.image || null);
  const [removeAvatar, setRemoveAvatar] = useState(false);

  const [pending, startTransition] = useTransition();
  const router = useRouter();
  const toast = useToast();
  const formRef = useRef<HTMLFormElement | null>(null);
  const fileRef = useRef<HTMLInputElement | null>(null);

  function onPickFile(e: React.ChangeEvent<HTMLInputElement>) {
    const f = e.target.files?.[0] || null;
    if (f) {
      const url = URL.createObjectURL(f);
      setPreviewUrl(url);
      setRemoveAvatar(false); // –µ—Å–ª–∏ –≤—ã–±—Ä–∞–ª–∏ –Ω–æ–≤—ã–π —Ñ–∞–π–ª ‚Äî –Ω–µ —É–¥–∞–ª—è–µ–º
    } else {
      setPreviewUrl(initial.image || null);
    }
  }

  function onClearAvatar() {
    setPreviewUrl(null);
    setRemoveAvatar(true);
    if (fileRef.current) fileRef.current.value = "";
  }

  function onSubmit(e: React.FormEvent) {
    e.preventDefault();

    // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–æ –Ω–µ–¥–µ–ª—å–Ω—ã–π –ª–∏–º–∏—Ç, –µ—Å–ª–∏ –∏–º—è –º–µ–Ω—è–µ—Ç—Å—è
    if (name.trim() !== (initial.name || "").trim()) {
      const ok = window.confirm(
        "–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è –ø—Ä–æ—Ñ–∏–ª—è.\n\n" +
          "–ò–º—è –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –Ω–µ —á–∞—â–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é.\n" +
          "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?"
      );
      if (!ok) return;
    }

    startTransition(async () => {
      try {
        if (!formRef.current) return;

        const fd = new FormData(formRef.current);
        // –Ø–≤–Ω–æ –ø—Ä–æ—Å—Ç–∞–≤–∏–º —Ñ–ª–∞–≥ —É–¥–∞–ª–µ–Ω–∏—è
        fd.set("removeAvatar", removeAvatar ? "1" : "");

        const res = (await saveProfile(fd)) as SaveResult;

        if (res.ok) {
          toast({ type: "success", title: "–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω" });
          router.refresh();
          // –æ—á–∏—Å—Ç–∏—Ç—å blob preview
          if (previewUrl?.startsWith("blob:")) URL.revokeObjectURL(previewUrl);
        } else {
          toast({
            type: "error",
            title: "–û—à–∏–±–∫–∞",
            description: res.error || "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å",
          });
        }
      } catch (err: any) {
        toast({
          type: "error",
          title: "–û—à–∏–±–∫–∞",
          description: err?.message || "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫",
        });
      }
    });
  }

  return (
    <form ref={formRef} onSubmit={onSubmit} className="space-y-4">
      {/* –ê–≤–∞—Ç–∞—Ä */}
      <div>
        <label className="block text-sm mb-1">–ê–≤–∞—Ç–∞—Ä</label>

        <div className="flex items-center gap-4">
          <div className="h-16 w-16 rounded-full bg-gray-100 overflow-hidden flex items-center justify-center">
            {previewUrl ? (
              // eslint-disable-next-line @next/next/no-img-element
              <img src={previewUrl} alt="avatar preview" className="h-full w-full object-cover" />
            ) : (
              <span className="text-xl">üôÇ</span>
            )}
          </div>

          <div className="flex flex-col gap-2">
            <input
              ref={fileRef}
              name="avatar"
              type="file"
              accept="image/png,image/jpeg,image/webp,image/gif"
              onChange={onPickFile}
              disabled={pending}
            />
            {previewUrl && (
              <button
                type="button"
                onClick={onClearAvatar}
                className="px-2 py-1 text-xs border rounded w-fit"
                disabled={pending}
              >
                –£–±—Ä–∞—Ç—å –∞–≤–∞—Ç–∞—Ä
              </button>
            )}
            <p className="text-xs opacity-70">
              –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è PNG/JPEG/WEBP/GIF. –ú–∞–∫—Å–∏–º—É–º 2&nbsp;–ú–ë.
            </p>
          </div>
        </div>
        {/* —Å–∫—Ä—ã—Ç—ã–π —Ñ–ª–∞–≥ —É–¥–∞–ª–µ–Ω–∏—è */}
        <input type="hidden" name="removeAvatar" value={removeAvatar ? "1" : ""} />
      </div>

      {/* –ò–º—è */}
      <div>
        <label className="block text-sm mb-1">–ò–º—è (–ø—É–±–ª–∏—á–Ω–æ)</label>
        <input
          className="w-full border rounded p-2"
          name="name"
          value={name}
          onChange={(e) => setName(e.target.value)}
          minLength={2}
          required
          placeholder="–í–∞—à–µ –∏–º—è"
          disabled={pending}
        />
        <p className="text-xs opacity-70 mt-1">
          –ò–º—è –≤–∏–¥–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ —Ä—è–¥–æ–º —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏. –ú–µ–Ω—è—Ç—å –∏–º—è –º–æ–∂–Ω–æ –Ω–µ —á–∞—â–µ, —á–µ–º{" "}
          <b>1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é</b>.
        </p>
      </div>

      {/* –û–±–æ –º–Ω–µ */}
      <div>
        <label className="block text-sm mb-1">–û–±–æ –º–Ω–µ</label>
        <textarea
          className="w-full border rounded p-2 h-32"
          name="bio"
          defaultValue={bio}
          onChange={(e) => setBio(e.target.value)}
          placeholder="–ü–∞—Ä–∞ —Å–ª–æ–≤ –æ —Å–µ–±–µ‚Ä¶"
          disabled={pending}
        />
      </div>

      <button
        type="submit"
        className="px-4 py-2 rounded bg-black text-white disabled:opacity-50"
        disabled={pending}
      >
        {pending ? "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ‚Ä¶" : "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"}
      </button>
    </form>
  );
}
