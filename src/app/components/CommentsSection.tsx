import Link from "next/link";
import { prisma } from "../../../lib/db";
import { getSessionUser } from "../../../lib/session";
import { CommentsForm } from "./CommentsForm";

function formatDate(d: Date) {
  return new Date(d).toLocaleString("ru-RU", { dateStyle: "medium", timeStyle: "short" });
}

export default async function CommentsSection({
  articleId,
  slug,
}: {
  articleId: string;
  slug: string;
}) {
  const sessionUser = await getSessionUser();
  const role = sessionUser?.role || "READER";
  const isLoggedIn = Boolean(sessionUser?.id);

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∞—Ç—å–∏ + –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const [article, userRow] = await Promise.all([
    prisma.article.findUnique({
      where: { id: articleId },
      select: { commentsEnabled: true, commentsGuestsAllowed: true },
    }),
    isLoggedIn
      ? prisma.user.findUnique({
          where: { id: sessionUser!.id },
          select: { name: true },
        })
      : Promise.resolve(null),
  ]);

  const userName = (userRow?.name || "").trim() || null;

  const comments = await prisma.comment.findMany({
    where: { articleId, status: "PUBLISHED" },
    include: { author: { select: { id: true, name: true, image: true } } },
    orderBy: { createdAt: "asc" },
  });

  const commentsDisabled = !article?.commentsEnabled;
  const guestsBlocked = article?.commentsGuestsAllowed === false;

  return (
    <section className="mt-10">
      <h2 className="text-xl font-semibold">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</h2>

      {/* –ë–∞–Ω–Ω–µ—Ä—ã-—Å–æ–æ–±—â–µ–Ω–∏—è */}
      {commentsDisabled ? (
        <div className="mt-3 text-sm p-3 border rounded bg-gray-50">
          –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —ç—Ç–æ–π —Å—Ç–∞—Ç—å–µ –æ—Ç–∫–ª—é—á–µ–Ω—ã.
        </div>
      ) : guestsBlocked && !isLoggedIn ? (
        <div className="mt-3 text-sm p-3 border rounded bg-gray-50">
          –ö–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏.{" "}
          <a className="underline" href="/api/auth/signin">
            –í–æ–π—Ç–∏
          </a>
          .
        </div>
      ) : null}

      {/* –§–æ—Ä–º–∞ ‚Äî —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤–∫–ª—é—á–µ–Ω—ã –∏ (–ª–∏–±–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ª–æ–≥–∏–Ω–µ–Ω, –ª–∏–±–æ –≥–æ—Å—Ç—è–º —Ä–∞–∑—Ä–µ—à–µ–Ω–æ) */}
      {!commentsDisabled && (isLoggedIn || !guestsBlocked) && (
        <CommentsForm
          articleId={articleId}
          slug={slug}
          isLoggedIn={isLoggedIn}
          userName={userName}
        />
      )}

      {/* –õ–∏—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ */}
      <div className="mt-6 space-y-4">
        {comments.length === 0 ? (
          <div className="text-sm opacity-70">–ü–æ–∫–∞ –Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.</div>
        ) : (
          comments.map((c) => (
            <div key={c.id} className="flex gap-3">
              {/* –ê–≤–∞—Ç–∞—Ä */}
              <div className="h-9 w-9 rounded-full bg-gray-100 flex items-center justify-center text-lg overflow-hidden">
                {c.author?.image ? (
                  // eslint-disable-next-line @next/next/no-img-element
                  <img src={c.author.image} alt="" className="h-9 w-9 object-cover" />
                ) : c.author ? (
                  <span>üôÇ</span>
                ) : (
                  <span title="–ì–æ—Å—Ç—å">üë§</span>
                )}
              </div>

              {/* –¢–µ–ª–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è */}
              <div className="flex-1">
                <div className="text-sm font-medium flex items-center gap-2">
                  {c.author ? (
                    <Link
                      href={`/u/${c.author.id}`}
                      className="underline decoration-dotted underline-offset-2"
                      title="–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"
                    >
                      {c.author.name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"}
                    </Link>
                  ) : (
                    <>
                      <span className="inline-flex items-center gap-1 text-xs rounded px-1.5 py-0.5 border">
                        –ì–æ—Å—Ç—å
                      </span>
                      <span>{c.guestName || "–∞–Ω–æ–Ω–∏–º"}</span>
                    </>
                  )}
                </div>

                <div className="text-xs opacity-60">{formatDate(c.createdAt)}</div>

                <div className="mt-1 whitespace-pre-wrap leading-relaxed">{c.body}</div>
              </div>
            </div>
          ))
        )}
      </div>
    </section>
  );
}
